from django.db import models
from django.utils import timezone
from telegram.models import ButtonTree


class BotClient(models.Model):
    is_verified = models.BooleanField(default=False, verbose_name="‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω")
    is_logined = models.BooleanField(default=False, verbose_name="‚úÖ –ª–æ–≥–∏–Ω")
    chat_id = models.BigIntegerField(
        verbose_name="üí¨ ID —á–∞—Ç–∞", db_index=True, unique=True
    )
    first_name = models.CharField(
        max_length=100, verbose_name="üßë –ò–º—è", null=True, blank=True
    )
    last_name = models.CharField(
        max_length=100, blank=True, null=True, verbose_name="üë®‚Äçüë©‚Äçüë¶ –§–∞–º–∏–ª–∏—è"
    )

    client_id = models.CharField(max_length=100, default="not set")
    phone_number = models.CharField(max_length=30, null=True, blank=True)
    username = models.CharField(
        max_length=100,
        blank=True,
        null=True,
        verbose_name="üì± –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram",
    )

    created_at = models.DateTimeField(
        auto_now_add=True, verbose_name="üï∞ –í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
    )

    last_active = models.DateTimeField(
        auto_now=True, verbose_name="‚è≥ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
    )

    class Meta:
        verbose_name = "ü§ñ –ö–ª–∏–µ–Ω—Ç –±–æ—Ç–∞"
        verbose_name_plural = "ü§ñ –ö–ª–∏–µ–Ω—Ç—ã –±–æ—Ç–∞"
        ordering = ["-last_active"]

    def __str__(self):
        return f"{self.first_name} {self.last_name or ''} ({self.chat_id})"

    async def aupdate_last_active(self):
        """–û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."""
        self.last_active = timezone.now()
        await self.asave(update_fields=["last_active"])

    async def aupdate_verified(self, verified: bool = True):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏."""
        self.is_verified = verified
        await self.asave(update_fields=["is_verified"])

    async def aupdate_fields(self, **kwargs):
        """
        –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∞–ø–¥–µ–π—Ç–µ—Ä.
        –ü—Ä–∏–º–µ—Ä: await client.aupdate_fields(first_name="–ù–æ–≤—ã–π", username="newuser")
        """
        for field, value in kwargs.items():
            if hasattr(self, field):
                setattr(self, field, value)
        await self.asave(update_fields=list(kwargs.keys()))


class BotClientSession(models.Model):
    client = models.OneToOneField(
        BotClient,
        on_delete=models.CASCADE,
        related_name="session",
        verbose_name="üë§ –ö–ª–∏–µ–Ω—Ç",
        unique=True,
    )
    current_button = models.ForeignKey(
        ButtonTree,
        on_delete=models.SET_NULL,
        null=True,
        blank=True,
        related_name="sessions",
        verbose_name="üîò –¢–µ–∫—É—â–∞—è –∫–Ω–æ–ø–∫–∞",
    )
    updated_at = models.DateTimeField(auto_now=True, verbose_name="‚è≥ –û–±–Ω–æ–≤–ª–µ–Ω–æ")

    class Meta:
        verbose_name = "üìå –°–µ—Å—Å–∏—è –∫–ª–∏–µ–Ω—Ç–∞"
        verbose_name_plural = "üìå –°–µ—Å—Å–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤"

    def __str__(self):
        return f"–°–µ—Å—Å–∏—è {self.client} ‚Üí {self.current_button or '–Ω–µ—Ç –∫–Ω–æ–ø–∫–∏'}"
