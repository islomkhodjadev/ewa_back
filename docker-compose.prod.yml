services:
  backend:
    build: .
    ports:
      - "8000-8002:8000"
    environment:
      DEBUG: ${DEBUG}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      BOT_TOKEN: ${BOT_TOKEN}
      BOT_HOST: ${BOT_HOST}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS},admin-helper.ewaproduct.com,localhost,127.0.0.1
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - db
      - redis
    deploy:
      replicas: 2              # 2 backends is enough
      resources:
        limits:
          memory: 800M         # Reduced - no model loaded
          cpus: "0.5"
    command:
      - sh
      - -lc
      - >
        python manage.py collectstatic --noinput &&
        python manage.py migrate &&
        exec gunicorn core.asgi:application
        -k uvicorn.workers.UvicornWorker
        --bind 0.0.0.0:8000
        --workers 1
        --threads 2
        --timeout 120
    volumes:
      - ./static:/app/static
      - ./media:/app/media
      - ./logs:/app/log
      - .:/app

  db:
    image: pgvector/pgvector:pg17
    container_name: ewa_db_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_MAX_CONNECTIONS: 50      # Reduced connections
    volumes:
      - db_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 2G           # Enough for vector ops
          cpus: "1.0"

  redis:
    image: redis:7-alpine
    container_name: ewa_redis
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru --save ""
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 512M         # Reduced
          cpus: "0.2"

  # Fast workers - only 2 instances
  worker-fast:
    build: .
    command: >
      celery -A core worker
      --loglevel=INFO
      --queues=fast,default
      --concurrency=3           # Moderate concurrency
      --prefetch-multiplier=1
      --max-tasks-per-child=50
    environment:
      - CELERY_WORKER=true
      - CELERYD_CONCURRENCY=3
      - OMP_NUM_THREADS=1
    env_file: .env
    depends_on: [redis]
    volumes:
      - .:/app
    deploy:
      replicas: 2              # Only 2 workers
      resources:
        limits:
          memory: 3G           # Enough for E5 model
          cpus: "1.5"

volumes:
  db_data:
  redis_data: