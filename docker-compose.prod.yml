version: "3.9"

services:
  backend:
    container_name: ewa_backend_django
    build: .
    ports:
      - "8000:8000"   # only backend exposed outside
    environment:
      DEBUG: 0
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      BOT_TOKEN: ${BOT_TOKEN}
      BOT_HOST: ${BOT_HOST}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - db
      - redis
    command:
      - sh
      - -lc
      - >
        python manage.py collectstatic --noinput &&
        python manage.py migrate &&
        
        exec gunicorn core.asgi:application
        -k uvicorn.workers.UvicornWorker
        --bind 0.0.0.0:8000
        --timeout 180

    volumes:
      - ./static:/app/static
      - ./media:/app/media
      - ./logs:/app/log
      - ./models:/app/models:ro 

  db:
    image: pgvector/pgvector:pg17
    container_name: ewa_db_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: ewa_redis
    volumes:
      - redis_data:/data
       
  # Fast/short tasks (low latency)
  worker-fast:
    build: .
    command: >
      celery -A core worker
      --loglevel=INFO
      --queues=fast,default
      --concurrency=4
      --prefetch-multiplier=1
      --max-tasks-per-child=1000
      --autoscale=12,4
    env_file: .env
    depends_on: [redis]
    volumes:
      - ./models:/app/models:ro 

  # Heavy tasks isolated
  worker-slow:
    build: .
    command: >
      celery -A core worker
      --loglevel=INFO
      --queues=slow
      --concurrency=2
      --prefetch-multiplier=1
      --max-tasks-per-child=500
      --autoscale=6,2
    env_file: .env
    depends_on: [redis]

  # Scheduler (only one)
  beat:
    build: .
    command: celery -A core beat --loglevel=INFO
    env_file: .env
    depends_on: [redis]
    volumes:
      - ./models:/app/models:ro 

  flower:
    build: .
    command: celery -A core flower --loglevel=INFO --port=5555
    env_file: .env
    depends_on: [redis]
    volumes:
      - ./models:/app/models:ro 

    ports:
      - "5556:5555"   # expose Flower UI
volumes:
  db_data:
  redis_data:
